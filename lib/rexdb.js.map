{"version":3,"file":"rexdb.js","sources":["../db/fetch.ts","../utils.ts","../db/core.ts","../db/plugins.ts","../db/index.ts"],"sourcesContent":["const ENV = typeof window === 'undefined' ? 'NODE' : 'BROWSER'\nconst performance = ENV === 'NODE' ? null : window.performance\nimport { AjaxArgsType, RequestType, URLResolve } from './interface'\n\nexport let DEV_PROXY_PORT = null\nconst JSONP_SUPPORT_RETURN = '__REDUX_DB_JSONP_SUPPORT'\n\nexport function setDevProxyPort(port) {\n    DEV_PROXY_PORT = port\n}\n\nexport function ajax(options:AjaxArgsType) {\n    return new Promise((resolve,reject) => {\n        let { data = {},type,query = {},url } = options\n        let sendData:string\n        const {\n            withCredentials,\n            headers = {},\n            cache = 'default',\n            timeout,\n            successStatusRange = [200,300],\n            cancelToken,\n            // add X-HTTP-Method-Override\n            isXHMO,\n            proxy,\n            pipe\n        } = options\n\n        let ContentType\n        if(ENV === 'NODE') {\n            ContentType = headers['Content-Type']\n        } else {\n            ContentType = headers['Content-Type'] || (\n                headers['Content-Type'] = data instanceof FormData \n                    ? 'multipart/form-data' \n                    : 'application/x-www-form-urlencoded'\n            )\n        }\n        \n\n        if(cancelToken) {\n            cancelToken(() => {\n                reject('__FETCH_CANCEL')\n            })    \n        }\n\n        type = type.toUpperCase() as RequestType\n\n        if(proxy) {\n            data['origin'] = url \n            data['method'] = type\n            url = getDevProxyUrl()\n            type = 'POST'\n        } \n\n        if(type === 'GET') {\n            query = {\n                ...data,\n                ...query\n            }\n            if(Object.keys(data).length && Object.keys(query).length) url = handleQuery(url,query)\n        } else {\n            sendData = formatData(ContentType,data)\n        } \n\n        if(isXHMO) {\n            headers['X-HTTP-Method-Override'] = type\n        }\n\n        if(ENV === 'NODE') {\n            const http = require('http')\n            headers['accept-encoding'] = 'gzip, deflate'\n            const httpOptions = {\n                method: type,\n                // headers,\n                // ...timeout ? { timeout } : {}\n            }\n\n            const req = http.request(url, httpOptions,(res) => {\n                if(pipe) {\n                    pipe.set('Content-Type', 'application/octet-stream')\n                    res.pipe(pipe, { end: true })\n                    res.on('end', () => {\n                        resolve()\n                    })\n                } else {\n                    let data = Buffer.alloc(0)\n                    res.on('data', (_data) => {\n                        data = Buffer.concat([data, _data])\n                    })\n                    res.on('end', () => {\n                        resolve({\n                            status: res.statusCode,\n                            data\n                        })\n                    })\n                }\n            })\n            req.end()\n        } else if(typeof fetch === 'undefined') {\n            let xhr = new XMLHttpRequest()\n            xhr.open(type,url,true)\n            for(let header in headers) {\n                xhr.setRequestHeader(header,headers[header])\n            }\n\n            if(timeout) xhr.timeout = timeout\n            xhr.withCredentials = withCredentials\n\n            // 不为multipart/form-data设置c-t\n            ContentType !== 'multipart/form-data' && xhr.setRequestHeader('Content-Type',ContentType ? ContentType : type === 'POST' ? 'application/x-www-form-urlencoded' : 'application/json')\n            xhr.send(type === 'GET' ? '' : sendData) \n            xhr.ontimeout = () => {\n                reject({\n                    status: null,\n                    errMsg: 'timeout'\n                })\n            }\n\n            xhr.onreadystatechange = function() {\n                let requestPerfStart\n                switch (xhr.readyState) {\n                case XMLHttpRequest.OPENED: {\n                    requestPerfStart = performance.now()\n                    break\n                }\n                case XMLHttpRequest.DONE: {\n                    let consume = performance.now() - requestPerfStart\n\n                    checkStatus(successStatusRange,xhr.status) ? resolve({\n                        ... options.perf ? { __consumeTime: consume } : {},\n                        status: xhr.status,\n                        data: xhr.response\n                    }) : reject({\n                        ... options.perf ? { __consumeTime: consume } : {},\n                        status: xhr.status,\n                        errMsg: xhr.response\n                    })\n                    break\n                }\n                }\n            }\n        } else {\n            const opts:RequestInit = {\n                headers,\n                method: type,\n                ... type !== 'GET' ? { body: sendData } : {},\n                cache,\n                credentials: handleCredentials(withCredentials)\n            }\n\n            if(ContentType === 'multipart/form-data') delete headers['Content-Type']\n\n            if(timeout) {\n                if(typeof AbortController !== 'undefined') {\n                    const controller = new AbortController()\n                    opts['signal'] = controller.signal\n                    fetchAndHandle()\n\n                    setTimeout(() => {\n                        controller.abort()\n                        reject('fetch timeout')\n                    },timeout)\n                } \n                else {\n                    Promise.race([\n                        fetchAndHandle(),\n                        new Promise(_ => {\n                            setTimeout(() => reject('fetch timeout'),timeout)\n                        })\n                    ])\n                }\n            } else fetchAndHandle()\n\n            function fetchAndHandle():Promise<unknown> {\n                if(proxy) opts.mode = 'cors'\n                return fetch(url,opts).then((res: Response) => {\n                    if(res.headers.get('Content-Type') == 'application/octet-stream') {\n                        return readStream(res.body)\n                    }\n                    return res\n                }).then(r => handleResult(r))\n                    .then(resolve)\n                    .catch(() => {\n                        debugger\n                        reject()\n                    })\n            }\n\n            function handleResult(res:Response) {\n                const handleContentTypeMap = {\n                    'application/json': () => res.json(),\n                    // 用以支持jsonp,不做任何处理\n                    'application/javascript': () => JSONP_SUPPORT_RETURN,\n                    'application/html': () => res.text(),\n                    'application/text': () => res.text(),\n                }\n                \n                if(successStatusRange ? checkStatus(successStatusRange,res.status) : res.ok) {\n                    let ret = handleContentTypeMap[res.headers.get('contentType') || res.headers.get('content-type')]\n                    return ret && ret() || res.text()\n                } else {\n                    const error = {\n                        state: 'fail',\n                        status: res.status,\n                    }\n                    throw new Error(JSON.stringify(error))\n                }\n            }\n        }\n    })\n}\n\nfunction readStream(readerStream: ReadableStream): Response {\n    const reader = readerStream.getReader()\n    const stream = new ReadableStream({\n        start(controller) {\n            const _read = () => {\n                reader.read().then(({ done, value }) => {\n                    if(done) return controller.close()\n                    console.log(new TextDecoder(\"utf-8\").decode(value))\n                    controller.enqueue(value)\n                    _read()\n                })\n            }\n\n            _read()\n        }\n    })\n    \n    return new Response(stream)\n}\n\n// TODO: 支持strict模式\nfunction handleCredentials(opt:boolean,none:boolean = true):RequestCredentials {\n    // chrome 最新版本要求same-site:lax(不发送绝大多数第三方cookie)\n    // 可手动设置为include(None)或Strict\n    if(opt) return none ? 'include' : 'same-origin'\n    else return 'omit'\n}\n\nfunction handleQuery(url:string,query:object):string {\n    return url + '?' + formatKV(query)\n}\n\nfunction checkStatus(range,status):boolean {\n    if(range && (range as []).pop) {\n        if(status >= range[0] && status < range[1]) return true\n    } \n    return range === status ? true : false\n}\n\nfunction formatData(type:string,data:object):string{\n    let r \n    switch(type) {\n    case 'multipart/form-data': {\n        if(data instanceof FormData) {\n            r = data\n            break\n        }\n\n        r = new FormData()\n        Object.keys(data).forEach(key => {\n            r.append(key,data[key])\n        })\n            \n        break\n    }\n    case 'application/x-www-form-urlencoded' :{\n        r = formatKV(data)\n        break\n    } \n    default: {}\n    case 'application/json': {\n        r = JSON.stringify(data)\n    }\n    }\n\n    return r\n}\n\nfunction formatKV(data:object) {\n    let r = ''\n    for(let k in data) {\n        r += `${k}=${data[k]}&`\n    }\n    return r.substring(0,r.length - 1)\n}\n\nfunction concatTypedArray(a,b) {\n    const concated = new (a.constructor)(a.length + b.length)\n    concated.set(a, 0)\n    concated.set(b, a.length)\n    return concated\n}\n\n// 改为url解析node\nfunction resolveURL(url: string):URLResolve {\n    if(!url.endsWith('/')) url += '/'\n    const match = /.*:\\/\\/(.*?)(?::)?(.*)?\\/(.*)/\n    const resolved = url.match(match)\n    if(!resolved) throw Error('proxy url is not accord standard. example: http://host:port/path')\n    return [resolved[1], resolved[2], resolved[3]]\n}\n\nfunction getDevProxyUrl() {\n    return `http://localhost:${DEV_PROXY_PORT}/proxy`\n}","interface IUtils {\n    extend(target:unknown,ext:object)\n    safeJsonParse(target:string):object\n    safeJsonStringify(target:object): string\n    isSupportPreload():boolean\n    isArray<T=any>(t):t is Array<T>\n}\n\nfunction extend(target:unknown,exts:object) {\n    for(let ext in exts) {\n        target[ext] = exts[ext]\n    }\n}\n\nfunction isArray<T=any>(t:any):t is Array<T>{\n    return Object.prototype.toString.call(t) === '[object Array]'\n}\n\nfunction safeJsonParse(target:string):object{\n    let ret:object\n    try {\n        ret = JSON.parse(target)\n    } catch(e) {\n        ret = {\n            __transform: 'fail',\n            __raw: target\n        }\n    }\n    return ret\n}\n\nfunction safeJsonStringify(target:object):string {\n    let ret:object | string\n    try {\n        ret = JSON.stringify(target)\n    } catch(e) {\n        ret = 'transform fail'\n    }\n    return ret\n}\n\nfunction isSupportPreload() {\n    return (\n        document.createElement('link').relList &&\n        document.createElement('link').relList.supports('preload')\n    )\n}\n\nconst _:IUtils = {\n    isArray,\n    extend,\n    safeJsonParse,\n    isSupportPreload,\n    safeJsonStringify\n}\n\n\nexport default _\n\n","import { CustomMustType,CustomOptionalType } from './interface'\nimport { ajax } from './fetch'\nimport _ from '../utils'\n\nexport const CONVERT_TO_FALSE = 'CONVERT_TO_FALSE'\ninterface IDB extends IPool<DB>{\n    execute:(args:unknown[]) => any\n}\n\ninterface ISenderHooks {\n    before(config:SenderOpts):SenderOpts\n    after(data:unknown):any\n}\n\ninterface ISender extends ISenderHooks,IPool<Sender>,ControlledPool{\n    send()\n    succeed()\n    error(e:any)\n    fetch(opts:CustomMustType)\n}\n\ninterface ControlledPool {\n    autoRelease: boolean\n    persist():void\n}\n\ninterface IPool<T> {\n    release()\n    initConfig(config:T extends DB ? DbOpts : SenderOpts)\n}\n\ntype Before = (config:SenderOpts) => SenderOpts\ntype After = (data:unknown) => any\n\n/**\n * succ和err接口将不被redux-db支持\n * DB类将作为抽象层兼容@tencent/db\n */\nexport type DbOpts = {\n    // 标识race\n    name ?: string,\n    url ?: string,\n    urls ?: string[],\n    isCdnSelect ?: boolean,\n    // TODO: 支持在action里直接调用DB.race\n    succ ?: Function,\n    err ?: Function,\n    before ?: Before[],\n    after ?: After[]\n} & CustomOptionalType\n\n\nexport type SenderOpts = {\n    before ?: Before[]\n    after ?: After[]\n} & DbConfigs\n\ntype DbConfigs = Omit<DbOpts,'err'> & {\n    err: Function[]\n}\n\nconst DBPools:DB[] = []\nconst SenderPools:Sender[] = []\n\nconst DB_CONTAIN_COUNT = 10\nconst SENDER_CONTAIN_COUNT = 10\n\ninterface DBDefaultsConfig {\n    baseUrl ?: string,\n    withCredentials ?: boolean,\n    withBrowserCache ?: boolean,\n}\n\nfunction extendConfigs<T>(configs:T,...exts:object[]):T {\n    for(let ext of exts) {\n        for (let _ext in ext) {\n            let _v = ext[_ext]\n            if(!~['before','after','err'].indexOf(_ext)) configs[_ext] = _v\n            else {\n                _v = _v.pop ? _v : [_v]\n                configs[_ext] && configs[_ext].pop ? (configs[_ext] = [].concat.call(configs[_ext],_v)) : (configs[_ext] = _v) \n            }\n        }\n    }\n\n    // TODO: 字符串解析有两次判断,改用正则匹配\n    if(configs['baseUrl'] !== '' && configs['url']) {\n        let url = configs['url']\n\n        let isHttp = url.indexOf('http://')\n        let isHttps = url.indexOf('https://')\n\n        if(!~isHttp) {\n            let length = 'http://'.length\n            configs['url'] = configs['url'].substring(0,isHttp + length + 1) + configs['url'].substring(isHttp + length)\n        } else if(!~isHttps) {\n            let length = 'https://'.length\n            configs['url'] = configs['url'].substring(0,isHttps + length + 1) + configs['url'].substring(isHttps + length)\n        }\n    }\n\n    return configs\n}\n\nexport class DB implements IDB{\n    static defaults:DBDefaultsConfig = {\n        baseUrl: ''\n    }\n\n    static options = {}\n\n    config:DbConfigs \n\n    constructor(configs:DbOpts) {\n        this.config = DB.configTransform(configs)\n    }\n\n    initConfig(configs:DbOpts) {\n        this.config = DB.configTransform(configs)\n    }\n    \n    /**\n     * fetch\n     * 兼容urls race | all发送\n     */\n    execute() {\n        if(_.isArray(this.config)) {\n            return DB.all(this.config as any)\n        }\n        if(this.config.urls) {\n            let name = this.config.name\n            if(this.config.isCdnSelect && name) {\n                let url\n                if((url = window.sessionStorage.getItem(`__cdn_${name}`))) {\n                    delete this.config['urls']\n                    this.config.url = url\n                    return getSender(this.config).send()\n                }\n            }\n\n            let urls = this.config.urls\n            delete this.config['urls']\n            const fetchMap = urls.map(url => {\n                this.config.url = url\n                return {\n                    ...this.config\n                }\n            })\n\n            return DB.race(fetchMap as any)\n        }\n        \n        // ajax\n        return getSender(this.config).send()\n    }\n\n    release() {\n        if(DBPools.length >= DB_CONTAIN_COUNT) {}\n        else {\n            this.config = null\n            DBPools.push(this)\n        }\n    }\n\n    /**\n     * @static\n     * @param {DbOpts} 传入参数\n     * 将参数转化适配至DbConfigs\n     * 扩展优先级:\n     * 1. custom options\n     * 2. extension options\n     * 3. global defaults\n     */\n    static configTransform(configs:DbOpts):DbConfigs {\n        return extendConfigs<DbConfigs>({\n            before: [],\n            after: [],\n            err: [],\n            type: configs.type ? configs.type : 'GET'\n        } as any as DbConfigs,this.defaults,this.options,configs)\n    }\n\n    static all(...requests:DbOpts[]) {\n        let succ = []\n        let err = []\n        const noop = () => {}\n\n        requests.forEach(r => {\n            succ.push([r.succ])\n            err.push([r.err])\n\n            r.succ = noop\n            r.err = noop\n        })\n\n        return Promise.all(requests.map(r => getDB(r).execute())).then(datas => {\n            succ.forEach((cb,i) => cb && cb(datas[i]))\n            return datas\n        }).catch((e:Error) => {\n            err.forEach(erc => erc && erc(e))\n        })\n    }\n\n    static race(requests:DbOpts[]) {\n        const succ = []\n        const err = []\n        const raceMap = new Map()\n        const noop = () => {}\n\n        requests.forEach((r,i) => {\n            // TODO: 执行回调的错误捕获,不能让一个回调错误影响到后面的执行\n            succ.push([r.succ])\n            err.push([r.err])\n\n            // if cdnselect -> cache url\n            succ.forEach(s => s.unshift((__:any,url:string) => {\n                let name = r.name\n                r.isCdnSelect && name && window.sessionStorage.setItem(`__cdn_${name}`,url)\n            }))\n\n            r.succ = noop\n            r.err = noop\n\n            const raceFlag = Symbol()\n            r['__race_key_'] = raceFlag\n            raceMap.set(raceFlag,i)\n        })\n\n        function executeRaceCb(ret:any,type:'succ' | 'err') {\n            const { __race_key_ } = ret\n            const index = raceMap.get(__race_key_)\n\n            // eslint-disable-next-line\n            if(!index) return console.warn('after拦截器删除了内部RACE标识,请不要操作返回数据之外的键')\n            type === 'succ' ? succ[index].forEach(cb => cb(ret,requests[index].url)) : err[index].forEach(cb => cb(ret))\n        }\n\n        return Promise.race(requests.map(r => getDB(r).execute())).then(data => {\n            executeRaceCb(data,'succ')\n        }).catch((e:Error) => {\n            executeRaceCb(e,'err')\n        })\n    }\n\n    static extendConfigs(exts:object) {\n        extendConfigs(this.options,exts)\n    }\n\n    /**\n     * \n     * @param stage 执行阶段\n     * @param name 注册拦截器名\n     * @param handle 拦截器执行方法\n     * @param fail err拦截器\n     */\n    static addExtension(stage:'before' | 'after',name:string,handle:Function,fail?:Function) {\n        let conf = {},\n            enableKey = handle['enableKey'] || name + 'Enable'\n\n        _.extend(conf, handle['option'] || {})\n\n        if(stage === 'before') {\n            conf[stage] = function (this:Sender,...args:any[]) {\n                if (DB.options[enableKey]) {\n                    if(args[0].bannerPlugins && args[0].bannerPlugins!.includes(name)) return args[0]\n                    return handle.apply(this, args)\n                }\n            }\n        }\n\n        if(stage === 'after') {\n            conf[stage] = function (this:Sender,data:any){\n                let config = this.config\n\n                if (DB.options[enableKey]) {\n                    if(config.bannerPlugins && config.bannerPlugins!.includes(name)) return data\n                    return handle.call(this, data)\n                }\n            }\n        }\n       \n        if(stage === 'after' && fail) {\n            conf['err'] = function (this:Sender,err) {\n                let config = this.config\n                if (DB.options[enableKey]) {\n                    if(config.bannerPlugins && config.bannerPlugins!.includes(name)) return \n                    return fail.call(this, err)\n                }\n            }\n        }\n        \n        this.extendConfigs(conf)\n    }\n\n    static closePlugin(name:string,enableKey = 'Enable') {\n        const t = name + enableKey\n        this.options[t] = false\n    }\n\n    static startPlugin(name:string,enableKey = 'Enable') {\n        const t = name + enableKey\n        this.options[t] = true\n    }\n}\n\nclass Sender implements ISender {\n    autoRelease = false\n    config:SenderOpts = null\n    data = null\n    err = null\n    responseText = ''\n    responseStatus = ''\n\n    constructor(config:SenderOpts) {\n        this.config = config\n    }\n\n    initConfig(config:SenderOpts) {\n        this.config = config\n    }\n\n    persist() {\n        this.autoRelease = false\n    }\n\n    send() {\n        this.config = this.before(this.config)\n        return this.fetch(<CustomMustType>this.config).then(_ => {\n            if(this.err) throw this.err\n            // 拦截器调用的时机在回调之前,否则无法修改数据\n            this.after(this.data)\n            this.succeed()\n            // 注意放入池子的时机,如果需要可以调用persist保持\n            this.autoRelease && this.release()\n\n            // 取出数据\n            return this.data.__raw == undefined ? this.data : this.data.__raw\n        }).catch(err => {\n            this.error(err)\n            throw err\n        })\n    }\n\n    before(config:SenderOpts):SenderOpts {\n        return config.before ? config.before.reduce((_config,cb) => { \n            try {\n                return cb(_config) \n            } catch(e) {\n                console.error(`\n                    before拦截器发生错误,error:${e}\n                `)\n                throw e\n            }\n            \n        },config) : config\n    }\n\n    // transform data before processSucc callback\n    after(data:unknown) {\n        this.data = this.config.after.length ? this.config.after.reduce((_data,cb) => {\n            if(_.isArray(_data) && _data[0] === CONVERT_TO_FALSE) throw new Error(JSON.stringify({\n                type: CONVERT_TO_FALSE,\n                reason: _data[1]\n            }))\n\n            return cb.call(this,_data)\n        },data) : data\n    }\n\n    succeed() {\n        try {            \n            let data = {\n                ...this.data\n            }\n            delete data.__race_key_\n            this.data = data\n            this.config.succ(data) \n        } catch({ message }) {\n            try {\n                let ret = _.safeJsonParse(message)\n                if(ret['type'] === CONVERT_TO_FALSE) this.error(ret)\n            } catch(e) {\n                new Error(e.message)\n            }\n        }\n    }\n\n    error(err){\n        this.config.err && this.config.err.forEach(cb => {\n            cb.call(this,err)\n        })\n    }\n\n    /**\n     * 职责:\n     * 1. 调用内部ajax库\n     * 2. 执行用户提供的transformData,这是用户最先接触到返回数据的地方\n     * 3. 根据策略缓存数据\n     * 4. 注入race所需要的key\n     */\n    fetch(opts:CustomMustType):Promise<void> {\n        const extendOpt = {\n            complete() {}\n        }\n\n        /**\n        * 注入race_key\n        * 否则race执行时无法知道成功的位置\n        */\n        const injectRaceKey = data => {\n            _.extend(data,{\n                __race_key_: this.config['__race_key_']\n            })\n        }\n       \n        return ajax({ ...opts, ...extendOpt }).then(r => {\n            \n            let { transformData } = this.config\n            let data:string | object = _.safeJsonParse(r as any)\n\n            // 对本身就是string类型的返回值不进入任何处理\n            // if(data['__transform'] === 'fail') data = data['__raw'] \n\n            if(transformData && typeof transformData === 'function') {\n                r = transformData(r)\n            } else new Error('transformData isn\\'t a function')\n\n            // 在注入race key之前缓存\n            let key \n            if((key = this.config.updateCache && this.config.updateCache.key)) {\n                window.localStorage.setItem(key, typeof data === 'object' ? _.safeJsonStringify(data) : data)\n            }\n\n            injectRaceKey(data)\n            this.data = data\n        }).catch((_err:object | string) => {\n            let err \n            if(typeof _err !== 'object') {\n                err = {\n                    msg: _err,\n                    ... _err === '__FETCH_CANCEL' ? { reason: 'request is canceled' } : {}\n                }\n            }\n            \n            else err = _err\n            injectRaceKey(err)\n            this.err = err\n        })\n    }\n\n    release() {\n        if(SenderPools.length >= SENDER_CONTAIN_COUNT) {}\n        else {\n            this.config = null\n            this.data = null\n            this.responseText = null\n            this.responseStatus = null\n\n            SenderPools.push(this)\n        }\n    }\n}   \n\nexport function getSender(opts:SenderOpts) {\n    if(SenderPools.length) {\n        let sender = SenderPools.pop()\n        sender.initConfig(opts)\n        return sender\n    }\n    else {\n        const useSender = new Sender(opts)\n        return useSender\n    }\n}\n\nexport function getDB(opts:DbOpts):DB {\n    autoAddSchemaPrefix(opts)\n    if(DBPools.length) {\n        let db = DBPools.pop()\n        db.initConfig(opts)\n        return db\n    }\n    else {\n        const useDb = new DB(opts)\n        return useDb\n    }\n}\n\nfunction autoAddSchemaPrefix(opts: DbOpts) {\n    const checkAndHandleUrl = (url: string) => /.*\\/\\//.test(url) ? url : 'http://' + url\n    if(opts.url) {\n        opts.url = checkAndHandleUrl(opts.url)\n    } else if(opts.urls) {\n        opts.urls.forEach((url,i,urls) => {\n            urls[i] = checkAndHandleUrl(url)\n        })\n    }\n}\n\nexport namespace DB {\n    interface IAfterUse {\n        (handler,name,err ?: Function):any\n    }\n    interface IBeforeUse {\n        (handler,name):any\n    }\n\n    interface IStageInterceptor<T> {\n        use:T\n    }\n    interface IInterceptors {\n        after:IStageInterceptor<IAfterUse>\n        before:IStageInterceptor<IBeforeUse>\n    }\n\n    export let interceptors:IInterceptors\n}\n","import { DB } from './core'\nimport _ from '../utils'\n\ninterface IDbExts {\n    before:object\n    after:object\n}\n\nconst dbExts:IDbExts = {\n    before: {},\n    after: {}\n}\n\nfunction useInterceptor(stage:'after' | 'before',name,interceptor,fail ?: Function) {\n    DB.addExtension(stage,name,interceptor,fail)\n    DB.startPlugin(name)\n}\n\nconst SenderInterceptors = {\n    interceptors: {\n        before: {\n            use(interceptor,name ?: string) {\n                useInterceptor('before',name,interceptor)\n            }\n        },\n        after: {\n            use(interceptor,name ?: string,fail ?: Function) {\n                useInterceptor('after',name,interceptor,fail)\n            }\n        }\n    }\n}\n\n_.extend(DB,{\n    interceptors: SenderInterceptors.interceptors\n})\n\nexport default dbExts","import { getDB,DbOpts,DB } from './core'\nimport dbExts from './plugins'\nimport { DEV_PROXY_PORT, setDevProxyPort } from '../db/fetch'\n\nconst startCheckPort = 25918\nfunction useDB(autoFetch:boolean,opts:DbOpts):Promise<any>;\nfunction useDB(opts:DbOpts):DB;\n\nfunction useDB(...options):Promise<any> | DB {\n    let db:DB\n    const autoFetch = options[0]\n    if(autoFetch === true) {\n        if(options[1].proxy && !DEV_PROXY_PORT) {\n            return new Promise(resolve => {\n                checkProxyServerStart(() => {\n                    db = getDB(options[1])\n                    resolve(db.execute())\n                })\n            })\n        } \n        db = getDB(options[1])\n        return db.execute()\n    } else {\n        if(options[1].proxy && !DEV_PROXY_PORT) {\n            return new Promise(resolve => {\n                checkProxyServerStart(() => {\n                    db = getDB(autoFetch)\n                    resolve(db)\n                })\n            })\n        }\n        db = getDB(autoFetch)\n        return db\n    }\n}\n\nfunction useFetch(options:DbOpts):Promise<any> {\n    return useDB(true, options)\n}\n\nfunction initDbExts() {\n    for(let stage in dbExts) {\n        let handles = dbExts[stage]\n        for(let name in handles) {\n            DB.addExtension(stage as any,name,handles[name])\n            DB.startPlugin(name)\n        }\n    }\n}\n\nfunction checkProxyServerStart(cb:Function) {\n    checkPort(startCheckPort, cb)\n}\n\nfunction checkPort(port, cb) {\n    useFetch({\n        url: `localhost:${port}/check`,\n        timeout: 500,\n    }).then(() => {\n        setDevProxyPort(port)\n        cb()\n    }, () => {\n        checkPort(port + 1, cb)\n    })\n}\n\nfunction initWork() {\n    initDbExts()\n}\n\ninitWork()\n\nexport { \n    DB, \n    useDB,\n    useFetch\n}\n"],"names":[],"mappings":"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"}